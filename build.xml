<?xml version="1.0" encoding="UTF-8"?>

<project name="Compilation de Tetris" default="compile" xmlns:ivy="antlib:org.apache.ivy.ant" >


	<property name="src" location="src"/>
	<property name="docs.dir" location="javadoc"/>
    <property name="bin" location="bin"/>
    <property name="test.results.dir" location="bin/test-results"/>
    <property name="test.reports" location="bin/test-reports"/>
    <property name="libs" location="lib"/>
    <property name="main-class" value="fr.ubo.tetris.Tetris"/>
    <property name="compile.classpath">
        ${libs}/commons-lang3-3.5.jar
    </property>
    <property name="version" value='1.0' />
    
    
	<target name="clean">
   			<delete dir="bin" />
   			<delete dir="lib" />
        
	        <!-- Optionally recreate the bin directory -->
	        <mkdir dir="bin" />
	        <mkdir dir="lib" />

        	<echo message="SUppression des fichiers issus de la compilation" />

	</target>
	
	<target name="compile" depends="clean, retrieve">
	     <javac srcdir="src" destdir="bin" includeantruntime="false">
	     	<classpath>
                <pathelement path="lib/commons-lang3-3.5.jar"/>
            </classpath>
          </javac> 
	</target>

	<target name="dist" depends="clean, compile">
		<mkdir dir="dist"/>

	    <!-- Create the JAR file -->
	    <jar destfile="dist/Tetris.jar" basedir="bin">
	        <manifest>
		        <attribute name="Built-By" value="Taher RHANDI"/>
	            <attribute name="Implementation-Version" value="1.0"/>
	            <attribute name="Main-Class" value="fr.ubo.tetris.Tetris"/>
	            <attribute name="Class-Path" value='${compile.classpath}'/>
	        </manifest>
	    </jar>
	    
	</target>
	
	<target name= "retrieve">
		<ivy:retrieve sync="true" type="jar"/> 
		<ivy:settings/>
		<ivy:resolve/>
	</target>

	<target name="compile-test" depends="compile">
	    <mkdir dir="${bin}/test"/>
	    <javac srcdir="test" destdir="${bin}/test" includeantruntime="false">
	        <classpath>
	            <!-- inclure le repertoire src dans le classpath -->
	            <pathelement path="${bin}"/>
	            <pathelement path="${src}"/>  
	            <fileset dir="${libs}">
	                <include name="junit-4.12.jar"/>
	                <include name="hamcrest-core-1.3.jar"/>
	            </fileset>
	        </classpath>
	    </javac>
	</target>
	
	<target name="test" depends="compile-test">
	    <mkdir dir="${test.results.dir}"/>
	    <junit printsummary="on" haltonfailure="yes">
	        <classpath>
	            <!-- inclure les fichiers compiles et les bibliotheques JUnit -->
	            <pathelement path="${bin}/test"/>
	            <pathelement path="${bin}"/>
	            <pathelement path="${src.}"/>  
	            <fileset dir="${libs}">
	                <include name="junit-4.12.jar"/>
	                <include name="hamcrest-core-1.3.jar"/>
	            </fileset>
	        </classpath>
	        <!-- formateur plain pour les resultas en console -->
	        <formatter type="plain" usefile="false"/>
	        <!-- formateur XML pour les fichiers de resultats -->
	        <formatter type="xml"/>
	        <!-- tests a executer -->
	        <batchtest>
	            <fileset dir="test">
	                <include name="**/*Test.java"/>
	            </fileset>
	        </batchtest>
	    </junit>
	</target>
	
	
	
	
	<target name="test-report" depends="test">
		<mkdir dir="${test.reports}"></mkdir>

		<junitreport todir="${test.reports}">
        <fileset dir="${test.results.dir}">
            <include name="TEST-*.xml"/>
        </fileset>
        <report format="frames" todir="${test.reports}" />
    </junitreport>
	</target>
	
	<target name="javadoc" >
	    <delete dir="${docs.dir}" />
	    <mkdir dir="${docs.dir}"/> <!-- Create a directory for the generated documentation -->
	    <javadoc destdir="${docs.dir}" sourcepath="${src}" packagenames="fr.ubo.tetris" maxmemory="512m">
	        <fileset dir="${src}">
	            <include name="**/*.java"/>
	        </fileset>
	        <classpath>
	            <pathelement path="${bin}"/>
	            <fileset dir="${libs}">
	                <include name="junit-4.12.jar"/>
	                 <include name="commons-lang3-3.5.jar"/>
	                <include name="hamcrest-core-1.3.jar"/>
	            </fileset>
	        </classpath>
    	</javadoc>
	</target>
	<target name="all" depends="dist, test-report, javadoc"></target>
	
	
</project>


